// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spear.Models;

#nullable disable

namespace Spear.Migrations
{
    [DbContext(typeof(SpearContext))]
    [Migration("20220602041949_BookRatings")]
    partial class BookRatings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "book_type", new[] { "book", "fic", "meme" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "permission", new[] { "moderate_prompts", "submit_prompts", "moderate_books" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "permission_mode", new[] { "allow", "deny" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "rating", new[] { "general", "teen", "mature", "explicit" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Spear.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<Rating>("Rating")
                        .HasColumnType("rating")
                        .HasColumnName("rating");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<BookType>("Type")
                        .HasColumnType("book_type")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_books");

                    b.HasIndex("GuildId", "Title", "Type")
                        .IsUnique()
                        .HasDatabaseName("ix_books_guild_id_title_type");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("Spear.Models.Guild", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_guilds");

                    b.ToTable("guilds", (string)null);
                });

            modelBuilder.Entity("Spear.Models.PermissionDefault", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<Permission>("Permission")
                        .HasColumnType("permission")
                        .HasColumnName("permission");

                    b.Property<PermissionMode>("Mode")
                        .HasColumnType("permission_mode")
                        .HasColumnName("mode");

                    b.HasKey("GuildId", "Permission")
                        .HasName("pk_permission_defaults");

                    b.ToTable("permission_defaults", (string)null);
                });

            modelBuilder.Entity("Spear.Models.PermissionEntry", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("role_id");

                    b.Property<Permission>("Permission")
                        .HasColumnType("permission")
                        .HasColumnName("permission");

                    b.Property<PermissionMode>("Mode")
                        .HasColumnType("permission_mode")
                        .HasColumnName("mode");

                    b.HasKey("GuildId", "RoleId", "Permission")
                        .HasName("pk_permission_entries");

                    b.ToTable("permission_entries", (string)null);
                });

            modelBuilder.Entity("Spear.Models.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<ulong?>("Submitter")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("submitter");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_prompts");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_prompts_guild_id");

                    b.ToTable("prompts", (string)null);
                });

            modelBuilder.Entity("Spear.Models.Book", b =>
                {
                    b.HasOne("Spear.Models.Guild", null)
                        .WithMany("Books")
                        .HasForeignKey("GuildId")
                        .HasConstraintName("fk_books_guilds_guild_id");
                });

            modelBuilder.Entity("Spear.Models.PermissionDefault", b =>
                {
                    b.HasOne("Spear.Models.Guild", null)
                        .WithMany("PermissionDefaults")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_permission_defaults_guilds_guild_id");
                });

            modelBuilder.Entity("Spear.Models.PermissionEntry", b =>
                {
                    b.HasOne("Spear.Models.Guild", null)
                        .WithMany("PermissionEntries")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_permission_entries_guilds_guild_id");
                });

            modelBuilder.Entity("Spear.Models.Prompt", b =>
                {
                    b.HasOne("Spear.Models.Guild", null)
                        .WithMany("Prompts")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prompts_guilds_guild_id");
                });

            modelBuilder.Entity("Spear.Models.Guild", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("PermissionDefaults");

                    b.Navigation("PermissionEntries");

                    b.Navigation("Prompts");
                });
#pragma warning restore 612, 618
        }
    }
}
